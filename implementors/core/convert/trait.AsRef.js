(function() {var implementors = {};
implementors["core_simd"] = [{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[u8; LANES]&gt; for SimdU8&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[u8]&gt; for SimdU8&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[u16; LANES]&gt; for SimdU16&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[u16]&gt; for SimdU16&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[u32; LANES]&gt; for SimdU32&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[u32]&gt; for SimdU32&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[u64; LANES]&gt; for SimdU64&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[u64]&gt; for SimdU64&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[u128; LANES]&gt; for SimdU128&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[u128]&gt; for SimdU128&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[usize; LANES]&gt; for SimdUsize&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[usize]&gt; for SimdUsize&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[i8; LANES]&gt; for SimdI8&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[i8]&gt; for SimdI8&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[i16; LANES]&gt; for SimdI16&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[i16]&gt; for SimdI16&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[i32; LANES]&gt; for SimdI32&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[i32]&gt; for SimdI32&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[i64; LANES]&gt; for SimdI64&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[i64]&gt; for SimdI64&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[i128; LANES]&gt; for SimdI128&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[i128]&gt; for SimdI128&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[isize; LANES]&gt; for SimdIsize&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[isize]&gt; for SimdIsize&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[f32; LANES]&gt; for SimdF32&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[f32]&gt; for SimdF32&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[f64; LANES]&gt; for SimdF64&lt;LANES&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const LANES:&nbsp;usize&gt; AsRef&lt;[f64]&gt; for SimdF64&lt;LANES&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()